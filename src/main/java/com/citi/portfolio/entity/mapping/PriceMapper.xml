<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.citi.portfolio.entity.dao.PriceMapper" >
  <resultMap id="BaseResultMap" type="com.citi.portfolio.entity.Price" >
    <id column="PriceID" property="priceid" jdbcType="INTEGER" />
    <result column="BidPrice" property="bidprice" jdbcType="DECIMAL" />
    <result column="OfferPrice" property="offerprice" jdbcType="DECIMAL" />
    <result column="Currency" property="currency" jdbcType="VARCHAR" />
    <result column="Date" property="date" jdbcType="DATE" />
    <result column="SecurityID" property="securityid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    PriceID, BidPrice, OfferPrice, Currency, Date, SecurityID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from price
    where PriceID = #{priceid,jdbcType=INTEGER}
  </select>
  <select id="selectBySecurityID" resultMap="BaseResultMap" parameterType="java.util.List">
    select *
    from price
    where SecurityID = #{securityId,jdbcType=INTEGER}
    order by Date desc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from price
    where PriceID = #{priceid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.citi.portfolio.entity.Price" >
    insert into price (PriceID, BidPrice, OfferPrice, 
      Currency, Date, SecurityID
      )
    values (#{priceid,jdbcType=INTEGER}, #{bidprice,jdbcType=DECIMAL}, #{offerprice,jdbcType=DECIMAL}, 
      #{currency,jdbcType=VARCHAR}, #{date,jdbcType=DATE}, #{securityid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.citi.portfolio.entity.Price" >
    insert into price
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="priceid != null" >
        PriceID,
      </if>
      <if test="bidprice != null" >
        BidPrice,
      </if>
      <if test="offerprice != null" >
        OfferPrice,
      </if>
      <if test="currency != null" >
        Currency,
      </if>
      <if test="date != null" >
        Date,
      </if>
      <if test="securityid != null" >
        SecurityID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="priceid != null" >
        #{priceid,jdbcType=INTEGER},
      </if>
      <if test="bidprice != null" >
        #{bidprice,jdbcType=DECIMAL},
      </if>
      <if test="offerprice != null" >
        #{offerprice,jdbcType=DECIMAL},
      </if>
      <if test="currency != null" >
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=DATE},
      </if>
      <if test="securityid != null" >
        #{securityid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.citi.portfolio.entity.Price" >
    update price
    <set >
      <if test="bidprice != null" >
        BidPrice = #{bidprice,jdbcType=DECIMAL},
      </if>
      <if test="offerprice != null" >
        OfferPrice = #{offerprice,jdbcType=DECIMAL},
      </if>
      <if test="currency != null" >
        Currency = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        Date = #{date,jdbcType=DATE},
      </if>
      <if test="securityid != null" >
        SecurityID = #{securityid,jdbcType=INTEGER},
      </if>
    </set>
    where PriceID = #{priceid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.citi.portfolio.entity.Price" >
    update price
    set BidPrice = #{bidprice,jdbcType=DECIMAL},
      OfferPrice = #{offerprice,jdbcType=DECIMAL},
      Currency = #{currency,jdbcType=VARCHAR},
      Date = #{date,jdbcType=DATE},
      SecurityID = #{securityid,jdbcType=INTEGER}
    where PriceID = #{priceid,jdbcType=INTEGER}
  </update>
  
  <select id="getLatestDate" resultType="java.util.Date">
    select distinct Date 
    from price
    order by Date desc
    limit 1
  </select>
  
  <select id="getLargestPriceID" resultType="java.lang.Integer">
    select PriceID 
    from price
    order by PriceID desc
    limit 1
  </select>
</mapper>